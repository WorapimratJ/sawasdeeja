<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>‡∏£‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏Å‡∏¥‡πÇ‡∏• (‡πÄ‡∏°‡∏ï‡∏£‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏î‡∏µ) ü©∑</title>
  <link href="https://fonts.googleapis.com/css2?family=Prompt:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      margin: 0;
      font-family: 'Prompt', sans-serif;
      background: linear-gradient(to bottom right, #FFE6E6, #E1F5FE);
      color: #333;
      text-align: center;
      transition: background 1s;
    }
    header {
      background-color: #ff8fa3;
      color: white;
      padding: 20px 0;
      font-size: 1.5rem;
      font-weight: bold;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    main {
      padding: 20px;
      max-width: 800px;
      margin: auto;
    }
    form {
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      padding: 20px;
      margin-bottom: 30px;
    }
    input, select, button {
      font-family: 'Prompt', sans-serif;
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border-radius: 8px;
      border: 1px solid #ccc;
    }
    button {
      background-color: #ffafcc;
      color: white;
      border: none;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #ff8fa3;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      border-radius: 12px;
      overflow: hidden;
    }
    th, td {
      padding: 12px;
      border-bottom: 1px solid #eee;
    }
    th {
      background-color: #ffcfd2;
    }
    .highlight {
      color: #ff5c8a;
      font-weight: bold;
    }
    .quote {
      font-style: italic;
      margin: 20px auto;
      padding: 10px;
      background: #fff0f5;
      border-radius: 8px;
      max-width: 600px;
      color: #d6336c;
    }
    .heart {
      display: inline-block;
      animation: heartbeat 1.5s infinite;
    }
    @keyframes heartbeat {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.1); }
    }
  </style>
</head>
<body>
  <header>
    <span class="heart">üíñ</span> ‡∏£‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏Å‡∏¥‡πÇ‡∏• (‡πÄ‡∏°‡∏ï‡∏£‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏î‡∏µ) <span class="heart">üíñ</span>
  </header>
  <main>
    <div class="quote" id="motivation"></div>
    <form id="run-form">
      <h2>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á üèÉ‚Äç‚ôÄÔ∏è</h2>
      <input type="text" id="name" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" required />
      <input type="date" id="date" required />
      <input type="number" step="0.01" id="distance" placeholder="‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á (‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£)" required />
      <input type="file" id="image" accept="image/*" />
      <button type="submit">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å üíæ</button>
    </form>

    <h2>üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πà‡∏á</h2>
    <table id="ranking-table">
      <thead>
        <tr>
          <th>‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö</th>
          <th>‡∏ä‡∏∑‡πà‡∏≠</th>
          <th>‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡∏∞‡∏™‡∏°</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>

    <h2>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h2>
    <table id="data-table">
      <thead>
        <tr>
          <th>‡∏ä‡∏∑‡πà‡∏≠</th>
          <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
          <th>‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á</th>
          <th>‡∏£‡∏π‡∏õ</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </main>
  <script>
    const motivationBox = document.getElementById('motivation');
    const quotes = [
      'üåû ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏ä‡πâ‡∏≤ ‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏¢!',
      'üèÉ‚Äç‚ôÄÔ∏è ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Å‡πâ‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏•‡πâ‡∏≤‡∏Å‡πâ‡∏≤‡∏ß ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°!',
      'üí° ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á',
      'ü©∑ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ß‡∏¥‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏£‡πá‡∏ß ‡πÅ‡∏Ñ‡πà‡∏ß‡∏¥‡πà‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏Å‡πá‡∏û‡∏≠'
    ];
    motivationBox.textContent = quotes[Math.floor(Math.random() * quotes.length)];

    function updateTheme() {
      const hour = new Date().getHours();
      if (hour >= 5 && hour < 11) {
        document.body.style.background = 'linear-gradient(to bottom right, #fffde7, #e1f5fe)';
      } else if (hour >= 11 && hour < 17) {
        document.body.style.background = 'linear-gradient(to bottom right, #b2ebf2, #fce4ec)';
      } else if (hour >= 17 && hour < 20) {
        document.body.style.background = 'linear-gradient(to bottom right, #ffe0b2, #f8bbd0)';
      } else {
        document.body.style.background = 'linear-gradient(to bottom right, #b39ddb, #90caf9)';
      }
    }
    updateTheme();

    const sheetURL = 'https://opensheet.elk.sh/1fCCzTIzzPo8umFKNK9w5-Y3vzp3m6AgD8IulVcXG5AY/runs';
    const form = document.getElementById('run-form');
    const dataTable = document.querySelector('#data-table tbody');
    const rankingTable = document.querySelector('#ranking-table tbody');

    form.addEventListener('submit', e => {
      e.preventDefault();
      const name = document.getElementById('name').value;
      const date = document.getElementById('date').value;
      const distance = document.getElementById('distance').value;

      fetch(sheetURL.replace('/runs', ''), {
        method: 'POST',
        mode: 'no-cors',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ ‡∏ä‡∏∑‡πà‡∏≠: name, ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: date, ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á: distance })
      });

      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ß‡∏°');
      form.reset();
    });

    fetch(sheetURL)
      .then(res => res.json())
      .then(data => {
        const totalByName = {};
        dataTable.innerHTML = '';
        data.forEach(entry => {
          if (!totalByName[entry.‡∏ä‡∏∑‡πà‡∏≠]) totalByName[entry.‡∏ä‡∏∑‡πà‡∏≠] = 0;
          totalByName[entry.‡∏ä‡∏∑‡πà‡∏≠] += parseFloat(entry.‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á);

          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${entry.‡∏ä‡∏∑‡πà‡∏≠}</td>
            <td>${entry.‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà}</td>
            <td>${entry.‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á}</td>
            <td>-</td>
          `;
          dataTable.appendChild(tr);
        });

        const ranking = Object.entries(totalByName)
          .sort((a, b) => b[1] - a[1])
          .map(([name, total], index) => `
            <tr>
              <td class="highlight">${index + 1}</td>
              <td>${name}</td>
              <td>${total.toFixed(2)} ‡∏Å‡∏°.</td>
            </tr>
          `)
          .join('');
        rankingTable.innerHTML = ranking;
      });
  </script>
</body>
</html>
